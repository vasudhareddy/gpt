public String getFeeCodeDescription(String feeCode, String clientNo) {
    Validate.notNull(feeCode, "Fee code must not be null");
    long startTime = System.currentTimeMillis();
    
    try (SqlSession session = touchdownSqlSessionFactory.openSession()) {
        List<FeeCode> feeCodes = session.getMapper(FeeCodeMapper.class)
                .getFeeCode(feeCode.replaceAll(ServiceConstants.SPACE_REGULAR_EXPRESSION, ServiceConstants.EMPTY_STRING), ".*");
        
        String feeCodeDesc = (feeCodes != null && !feeCodes.isEmpty()) 
                ? feeCodes.get(0).getFeeCodeDesc() 
                : logNoRecordsWarn(feeCode, clientNo);

        logExecutionTime(startTime);
        return feeCodeDesc;
    }
}

private void logExecutionTime(long startTime) {
    if (LOGGER.isInfoEnabled()) {
        LOGGER.info("{}{}{}", ServiceConstants.TOTAL_TIME_SPENT, System.currentTimeMillis() - startTime, ServiceConstants.CLOSE_BRACKET);
    }
}

private String logNoRecordsWarn(String feeCode, String clientNo) {
    LOGGER.warn("{}{}{}", NO_RECORDS_MSG, feeCode, CLIENT_NO_MSG, clientNo);
    return null;
}

public BatchCd getBatchCodeDescription(String batchCode) {
    Validate.notNull(batchCode, "Batch code must not be null");
    long startTime = System.currentTimeMillis();
    
    try (SqlSession session = touchdownSqlSessionFactory.openSession()) {
        BatchCodeMapper mapper = session.getMapper(BatchCodeMapper.class);
        BatchCd batchCodeValue = mapper.getBatchCode(batchCode);
        
        if (batchCodeValue == null) {
            return logNoRecordsWarn("Batch Code", batchCode, null);  // ClientNo is not available here
        }

        logExecutionTime(startTime, TouchDownConstants.GET_BATCH_CODE);
        return batchCodeValue;
    }
}


public ApplControl getApplControlById(String applControlID) {
    Validate.notNull(applControlID, "AppControl ID must not be null");
    long startTime = System.currentTimeMillis();
    
    try (SqlSession session = touchdownSqlSessionFactory.openSession()) {
        ApplicationControlMapper mapper = session.getMapper(ApplicationControlMapper.class);
        ApplControl applControl = mapper
                .getApplControl(applControlID.replaceAll(ServiceConstants.SPACE_REGULAR_EXPRESSION, ServiceConstants.EMPTY_STRING));
        
        if (applControl == null) {
            return logNoRecordsWarn("App Control", applControlID, null);  // ClientNo is not available here
        }

        logExecutionTime(startTime, TouchDownConstants.GET_APPL_CONTROL);
        return applControl;
    }
}
public TransactionCd getTransactionCodeDescription(Integer transactionCode) {
    Validate.notNull(transactionCode, "Transaction code must not be null");
    long startTime = System.currentTimeMillis();
    
    try (SqlSession session = touchdownSqlSessionFactory.openSession()) {
        TransactionCodeMapper mapper = session.getMapper(TransactionCodeMapper.class);
        TransactionCd transactionCodeValue = mapper.getTransactionCode(transactionCode);
        
        logExecutionTime(startTime, TouchDownConstants.GET_TRAN_CODE);
        return transactionCodeValue;
    }
}

private void logExecutionTime(long startTime, String operation) {
    if (LOGGER.isInfoEnabled()) {
        LOGGER.info("{}{}{}", ServiceConstants.OPEN_BRACKET, operation,
                (System.currentTimeMillis() - startTime) + ServiceConstants.CLOSE_BRACKET);
    }
}

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.data.redis.connection.RedisConnectionFactory;
import org.springframework.data.redis.core.RedisTemplate;
import org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer;
import org.springframework.data.redis.serializer.StringRedisSerializer;

@Configuration
public class RedisConfig {

    // Create a RedisTemplate bean for interaction with Redis
    @Bean
    public RedisTemplate<String, Object> redisTemplate(RedisConnectionFactory connectionFactory) {
        RedisTemplate<String, Object> template = new RedisTemplate<>();
        
        // Set the Redis connection factory
        template.setConnectionFactory(connectionFactory);
        
        // Use StringRedisSerializer for the key serialization
        template.setKeySerializer(new StringRedisSerializer());
        
        // Use GenericJackson2JsonRedisSerializer for value serialization to store objects as JSON
        template.setValueSerializer(new GenericJackson2JsonRedisSerializer());
        
        // Use StringRedisSerializer for the hash key
        template.setHashKeySerializer(new StringRedisSerializer());
        
        // Use GenericJackson2JsonRedisSerializer for hash value serialization
        template.setHashValueSerializer(new GenericJackson2JsonRedisSerializer());
        
        // Set the template to enable transaction support
        template.setEnableTransactionSupport(true);

        return template;
    }
}
